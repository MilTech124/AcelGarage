/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import Materials from "./Materials";


export function Model(props) {
    
const { color, width, depth, height, emboss, roof, roofColor, roofType, gateEmbose, gateDirection, gateCount, gateType1, gateColor1, gateWidth1, gateHeight1, gatePositionValue1, gateType2, gateColor2, gateWidth2, gateHeight2, gatePositionValue2, gateType3, gateColor3, gateWidth3, gateHeight3, gatePositionValue3, door, window, carport, carportWidth, carportSide } = props.selectedOptions;

const { nodes, materials } = useGLTF("/model/garaz.glb");
const {roofMaterial,wallMaterial} = Materials(props.selectedOptions);


  const Gate = () => {
    return (
      <>
        <mesh
          name="brama"
          geometry={nodes.brama.geometry}
          material={materials.inny}
          position={[3.004, 1.033, 0]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={[1, 1, 1.5]}
        />
        <mesh
          name="obramowka-drzwi001"
          geometry={nodes["obramowka-drzwi001"].geometry}
          material={materials.czarna}
          position={[3.001, 1.053, 0]}
          rotation={[0, 0, -Math.PI / 2]}
          scale={[1.02, 1.054, 1.55]}
        />
        <mesh
          name="brama-klamka"
          geometry={nodes["brama-klamka"].geometry}
          material={materials.czarna}
          position={[3.013, 1.032, 0.002]}
          scale={[0.017, 0.021, 0.017]}
        />
      </>
    );
  };

  const Door = () => {
    return (
      <group>
        <mesh
          name="drzwi-klamka"
          geometry={nodes["drzwi-klamka"].geometry}
          material={materials.czarna}
          position={[3.061, 1.064, -1.813]}
          scale={[0.025, 0.02, 0.025]}
        />
        <mesh
          name="drzwi"
          geometry={nodes.drzwi.geometry}
          material={nodes.drzwi.material}
          position={[2.963, 1.054, -2.175]}
          scale={[0.05, 1.021, 0.5]}
        />
        <mesh
          name="drzwi-obramowka"
          geometry={nodes["drzwi-obramowka"].geometry}
          material={materials.czarna}
          position={[2.963, 1.054, -2.175]}
          scale={[0.05, 1.021, 0.5]}
        />
      </group>
    );
  };

  const Carport = () => {
    const x = 1.5;

    return (
      <group rotation={[0, 0, 0]}>
        <group position={[0, 0, 0 + x]}>
          <mesh
            name="podpora-przod"
            geometry={nodes["podpora-przod"].geometry}
            material={nodes["podpora-przod"].material}
            position={[3.011, 1.069, 3]}
            scale={[0.025, 1.064, 0.025]}
          />
          <mesh
            name="podpora-srodek"
            geometry={nodes["podpora-srodek"].geometry}
            material={nodes["podpora-srodek"].material}
            position={[0.014, 1.069, 3]}
            scale={[0.025, 1.064, 0.025]}
          />
          <mesh
            name="podpora-tyl"
            geometry={nodes["podpora-tyl"].geometry}
            material={nodes["podpora-tyl"].material}
            position={[-2.958, 1.069, 3]}
            scale={[0.025, 1.064, 0.025]}
          />
        </group>
        <group scale={[1, 1, 1 * x]} rotation={[0, 0, 0]}>
          <mesh
            name="dach-lewy"
            geometry={nodes["dach-lewy"].geometry}
            material={nodes["dach-lewy"].material}
            position={[0, 2.641, 1.591]}
            rotation={[Math.PI / 9, 0, 0]}
            scale={[3.131, 1.137, 1.729]}
          />
          <mesh
            name="dach_-przod-wiata"
            geometry={nodes["dach_-przod-wiata"].geometry}
            material={nodes["dach_-przod-wiata"].material}
            position={[3, 2.571, 0]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[1, 1, 1]}
          />
          <mesh
            name="dach_-tyl-wiata"
            geometry={nodes["dach_-tyl-wiata"].geometry}
            material={nodes["dach_-tyl-wiata"].material}
            position={[-3, 2.571, 0]}
            rotation={[0, 0, -Math.PI / 2]}
            scale={[1, 1, 1]}
          />
        </group>
      </group>
    );
  };
  const Window = () => {
    return (
      <group
        name="okno"
        position={[3.006, 1.631, 2.367]}
        scale={[0.02, 0.4, 0.4]}
      >
        <mesh
          name="Cube002"
          geometry={nodes.Cube002.geometry}
          material={materials.czarna}
        />
        <mesh
          name="Cube002_1"
          geometry={nodes.Cube002_1.geometry}
          material={materials["Material.004"]}
        />
      </group>
    );
  };

  const Roof = () => {
    return (
      <group>
        <mesh
          name="dach-lewy"
          visible={true}
          geometry={nodes["dach-lewy"].geometry}
          material={roofMaterial}
          position={[0, 2.641, 1.591]}
          rotation={[Math.PI / 9, 0, 0]}
          scale={[3.131, 1.137, 1.729]}
        />
        <mesh
          name="dach-prawy"
          geometry={nodes["dach-prawy"].geometry}
          material={roofMaterial}
          position={[0, 2.628, -1.618]}
          rotation={[-Math.PI / 9, 0, 0]}
          scale={[3.131, 1.137, 1.729]}
        />
        <mesh
          name="dach-tyl"
          geometry={nodes["dach-tyl"].geometry}
          material={wallMaterial}
          position={[-3, 2.571, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          name="dach-przod"
          geometry={nodes["dach-przod"].geometry}
          material={wallMaterial}
          position={[3, 2.571, 0]}
          rotation={[0, 0, -Math.PI / 2]}
        />
      </group>
    );
  };

  const RoofDirection = () => (
    <group>
      <mesh
        name="bryla"
        geometry={nodes.bryla.geometry}
        material={materials.Material}
        position={[0, 1.131, 0.006]}
        scale={[3, 1.102, 2.994]}
      />
      <mesh
        name="spadtyl"
        geometry={nodes.spadtyl.geometry}
        material={nodes.spadtyl.material}
        position={[0, 2.427, -0.006]}
        rotation={[0, 0, 0.087]}
        scale={[3.131, 1.137, 3.1]}
      />
    </group>
  );

  return (
    <group {...props} dispose={null} position={[0, -0.5, 0]}>
      <Gate />
      <Door />
      <Window />
      <Roof roofMaterial={roofMaterial} />
      {/* <Carport />  */}
      {/* <RoofDirection /> */}
      <mesh
        name="calosc"
        visible={true}
        geometry={nodes.calosc.geometry}
        material={wallMaterial}
        position={[0, 1.079, 0]}
        scale={[3, 1.05, 3]}
      />
    </group>
  );
}

useGLTF.preload("/model/garaz.glb");
